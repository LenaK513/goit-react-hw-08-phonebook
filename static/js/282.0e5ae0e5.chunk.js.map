{"version":3,"file":"static/js/282.0e5ae0e5.chunk.js","mappings":"sPAEaA,EAAOC,EAAAA,EAAAA,GAAH,oEAKJC,EAASD,EAAAA,EAAAA,OAAH,6L,SCHNE,EAAc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAC7C,OACE,UAACP,EAAD,CAAMI,GAAIA,EAAV,UACGC,EADH,MACYC,GACV,SAACJ,EAAD,CAAQM,QAAS,kBAAMD,EAAgBH,EAAtB,EAAjB,sBAFiBA,EAKtB,ECXYK,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEtBC,EAAoB,SAAAF,GAAK,OAAIA,EAAMG,OAAOC,IAAjB,EAEzBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAErBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,ECJnBC,EAAOlB,EAAAA,EAAAA,GAAH,4DCQJmB,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYd,GAC7Be,QAAQC,IAAId,IAEZe,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,MACV,GAAE,CAACN,IAEJ,IAUMO,EARuB,SAACjB,EAAUE,GACtC,IAAIgB,EAAgB,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAQiB,cAE/B,cAAOnB,QAAP,IAAOA,OAAP,EAAOA,EAAUE,QAAO,SAAAkB,GAAO,OAC7BA,EAAQ1B,KAAKyB,cAAcE,SAASH,EADP,GAGhC,CAEuBI,CAAqBtB,GAV9BY,EAAAA,EAAAA,IAAYX,IAY3B,OACE,UAACO,EAAD,YACE,qCACCS,EAAgBM,OAAS,GACxBN,EAAgBO,KAAI,gBAAG/B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OAClB,SAACH,EAAD,CAEEC,GAAIA,EACJC,KAAMA,EACNC,MAAOA,EACPC,gBAAiB,kBAAMc,GAASe,EAAAA,EAAAA,IAAchC,GAA7B,GAJZA,EAFW,MAW3B,E,SC5CYiC,EAAcpC,EAAAA,EAAAA,MAAH,2ICOXqC,GAPYrC,EAAAA,EAAAA,KAAH,yHAODA,EAAAA,EAAAA,MAAH,yICFLsC,EAAS,WACpB,IAAMlB,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAACe,EAAD,oCAEE,SAACC,EAAD,CAAOE,KAAK,OAAOC,SANG,SAAAC,GAAK,OAC7BrB,GAASsB,EAAAA,EAAAA,IAAgBD,EAAME,cAAcC,OADhB,MAShC,ECfc,SAASC,IACtB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXN,GAAYO,EAAAA,EAAAA,IAAYR,GACxBG,GAAQK,EAAAA,EAAAA,IAAYN,GAM1B,OAJAS,EAAAA,EAAAA,YAAU,WACRL,EAASM,EAAAA,GACV,GAAE,CAACN,KAGF,2BACGL,IAAcE,IAAS,mDACxB,SAACE,EAAD,KACA,SAACmB,EAAD,MAGL,C","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nexport const Button = styled.button`\n  text-transform: uppercase;\n  color: #fff;\n  background-color: #f74002;\n  padding: 5px 7px;\n  border: transparent;\n  border-radius: 5px;\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Button } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, phone, onDeleteContact }) => {\n  return (\n    <Item id={id} key={id}>\n      {name} : {phone}\n      <Button onClick={() => onDeleteContact(id)}>Delete</Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectInputFilter = state => state.filter.text;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectContacts, selectInputFilter } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(selectInputFilter);\n\n  const getContactFromFilter = (contacts, filter) => {\n    let normalizedFilter = filter?.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getContactFromFilter(contacts, filter);\n\n  return (\n    <List>\n      <h2>Contacts</h2>\n      {visibleContacts.length > 0 &&\n        visibleContacts.map(({ id, name, phone }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            phone={phone}\n            onDeleteContact={() => dispatch(deleteContact(id))}\n          ></ContactItem>\n        ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  getContactFromFilter: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const InputFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-weight: 500;\n  margin-top: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  height: 25px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filterSlice';\n// import { getInputFilter } from 'redux/selectors';\nimport PropTypes from 'prop-types';\nimport { InputFilter } from './Filter.styled';\nimport { Input } from 'components/ContactForm/ContactForm.styled';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  // const filter = useSelector(getInputFilter);\n  // console.log(filter);\n\n  const handleFilterCheck = event =>\n    dispatch(setStatusFilter(event.currentTarget.value));\n\n  return (\n    <InputFilter>\n      Find contacts by name\n      <Input type=\"text\" onChange={handleFilterCheck} />\n    </InputFilter>\n  );\n};\n\nFilter.propTypes = {\n  handleFilterCheck: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading, selectError } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts);\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n      <Filter />\n    </div>\n  );\n}\n"],"names":["Item","styled","Button","ContactItem","id","name","phone","onDeleteContact","onClick","selectContacts","state","contacts","selectInputFilter","filter","text","selectLoading","isLoading","selectError","error","List","ContactList","dispatch","useDispatch","useSelector","console","log","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getContactFromFilter","length","map","deleteContact","InputFilter","Input","Filter","type","onChange","event","setStatusFilter","currentTarget","value","Contacts"],"sourceRoot":""}